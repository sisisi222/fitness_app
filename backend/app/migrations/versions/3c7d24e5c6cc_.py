"""empty message

Revision ID: 3c7d24e5c6cc
Revises: 
Create Date: 2023-11-10 04:04:33.689210

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3c7d24e5c6cc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discussion_topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discussion_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('comment_text', sa.Text(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['discussion_topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('discussiontopic')
    op.drop_table('badges')
    op.drop_table('discussioncomment')
    op.drop_table('food_entries')
    with op.batch_alter_table('aerobic_details', schema=None) as batch_op:
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('aerobic_details_workout_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'workouts', ['workout_id'], ['id'])

    with op.batch_alter_table('body_measurements', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('body_measurements_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('cardio_details', schema=None) as batch_op:
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('cardio_details_workout_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'workouts', ['workout_id'], ['id'])

    with op.batch_alter_table('food_log', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('log_date',
               existing_type=sa.DATE(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_DATE'))
        batch_op.drop_constraint('food_log_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('exercise_type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('goal_status')

    with op.batch_alter_table('user_bmi', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('weight_lbs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('height_in',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('weight', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('weight_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('weight_training_details', schema=None) as batch_op:
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('weight_training_details_workout_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'workouts', ['workout_id'], ['id'])

    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('exercise_type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('workouts_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('workouts_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('exercise_type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('weight_training_details', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('weight_training_details_workout_id_fkey', 'workouts', ['workout_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('weight', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('weight_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('user_bmi', schema=None) as batch_op:
        batch_op.alter_column('height_in',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('weight_lbs',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('goal_status', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
        batch_op.alter_column('exercise_type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('food_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('food_log_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('log_date',
               existing_type=sa.DATE(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_DATE'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('cardio_details', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('cardio_details_workout_id_fkey', 'workouts', ['workout_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('body_measurements', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('body_measurements_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('aerobic_details', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('aerobic_details_workout_id_fkey', 'workouts', ['workout_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('workout_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('food_entries',
    sa.Column('entry_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('food_log_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('food_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity_g', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['foods.food_id'], name='food_entries_food_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['food_log_id'], ['food_log.log_id'], name='food_entries_food_log_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('entry_id', name='food_entries_pkey')
    )
    op.create_table('discussioncomment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='discussioncomment_created_by_fkey'),
    sa.ForeignKeyConstraint(['topic_id'], ['discussiontopic.id'], name='discussioncomment_topic_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='discussioncomment_pkey')
    )
    op.create_table('badges',
    sa.Column('badge_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('badge_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('badge_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('badge_id', name='badges_pkey')
    )
    op.create_table('discussiontopic',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='discussiontopic_created_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='discussiontopic_pkey')
    )
    op.drop_table('discussion_comment')
    op.drop_table('discussion_topic')
    # ### end Alembic commands ###
